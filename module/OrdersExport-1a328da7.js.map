{"version":3,"file":"OrdersExport-1a328da7.js","sources":["../../src/ActivatePay.html","../../src/OrdersExport.html"],"sourcesContent":["<script>\n    import { onMount, afterUpdate } from 'svelte'\n    import ModalView from './UI/UIModalView.html'\n    import { support, api, settings, accounts, modal, pop_modal } from './CTStore.js';\n    function contact() {\n        support(`Hello, I would like to activate payments for my GetOrders account.\\n üëâüèª My ID : ${$settings.settings.fire_id}`);\n    }\n</script>\n<ModalView>\n    <div slot=\"title\" class=\"font-semibold text-xl text-gray-600 pb-3\">\n        Activate GetPayments\n    </div>\n    <div slot=\"content\" class=\"h-64 p-2\">\n        <p class=\"text-gray-800 mb-6 text-center\">\n            In order to accept payments, your account has to first activate <b>GetPayments</b>.<br>\n            Tap here to contact our support to activate now.\n        </p>\n        <div class=\"flex justify-center mt-2\">\n            <button on:click=\"{contact}\"\n                class=\"p-2 w-1/2 shadow-md bg-theme text-white rounded-lg capitalize font-bold h-full shadow-md\">\n                Contact Support\n            </button>\n        </div>\n        <div class=\"flex justify-center mt-2\">\n            <button on:click=\"{pop_modal}\"\n                class=\"p-2 w-1/2 shadow-md bg-gray-400 text-white rounded-lg capitalize font-bold h-full shadow-md\">\n                Cancel\n            </button>\n        </div>\n    </div>\n</ModalView>","<svelte:head>\n    <script src=\"https://unpkg.com/papaparse@latest/papaparse.min.js\"></script>\n</svelte:head>\n<script>\n    import { onMount, afterUpdate } from 'svelte'\n    import Loading from './UI/UILoading.html'\n    import ModalView from './UI/UIModalView.html'\n    import { support, api, settings, accounts, modal, pop_modal, fetch, download, sub } from './CTStore.js';\n    import Segmented from './UI/UISegmented.html';\n    import dayjs from \"dayjs\"\n    let filters = { type: \"paid\" };\n    let selected_date = dayjs(), format = \"\", loading = false;\n    let field_style = { container: \"p-2 mb-3\", label: \"w-32\" }\n    function changeDate(day) {\n        selected_date = selected_date.add(day, 'day');\n    }\n    function do_export() {\n        loading = true;\n        fetch(api(`/orders`), { sub: $sub.fire_id, order_type: filters.type, from: selected_date.startOf('day').toJSON(), to: selected_date.endOf('day').toJSON() }, 'GET').then(data => {\n            loading = false;\n            process(data.orders);\n        });\n    }\n    function process(orders) {\n        let list = [];\n        switch (format) {\n            case \"\":\n                {\n                    list = orders.map(r => {\n                        return {\n                            \"order_date\": dayjs(r.createdAt).format('MM/DD hh:mm'),\n                            \"name\": r.guest.name,\n                            \"phone\": r.guest.phone,\n                            \"address\": `${r.guest.address || ''} ${r.guest.address2 || ''}`,\n                            \"postcode\": r.guest.postcode,\n                            \"notes\": r.notes,\n                            \"isPickUp\": r.guest.address ? 'N' : 'Y',\n                            \"amount\": r.payment ? r.payment.amount.toFixed(2) : \"10.00\",\n                            \"paid\": r.payment ? dayjs(r.payment.paidAt || r.createdAt).format('MM/DD hh:mm') : '',\n                            \"invoice\": `https://pay.getorders.app/?i=${r.invoice_id}`\n                        }\n                    })\n                }\n                break;\n            case \"speedy\":\n                {\n                    list = orders.map(r => {\n                        return {\n                            \"Address(mandatory field)\": `${r.guest.address || ''} ${r.guest.address2 || ''}`,\n                            \"Contact person\": r.guest.name,\n                            \"Recipient's phone (mandatory field)\": r.guest.phone,\n                            \"Parcel contents(mandatory field)\": \"FOOD\",\n                            \"Weight in kg(mandatory field)\": 0.5,\n                            \"Internal order number\": r.invoice_id,\n                            \"Comment for courier\": (r.notes || ''),\n                            \"Apartment / office number\": \"\",\n                            \"Need to return on pickup point\": \"\",\n                            \"Time \\\"since\\\" on point\": dayjs(r.createdAt).format('DD.MM.YYYY hh:mm:ss'),\n                            \"Time \\\"till\\\" on point\": dayjs(r.createdAt).add(1, 'hour').format('DD.MM.YYYY hh:mm:ss'),\n                            \"COD amount\": \"0\",\n                            \"Buyout amount\": \"0\",\n                            \"Do not fill anything in this column\": \"\",\n                            \"Declared value\": r.payment ? r.payment.amount.toFixed(2) : \"10.00\",\n                            \"Courier needs motorbox\": \"x\"\n                        }\n                    });\n                }\n                break;\n            case \"zepto\":\n                {\n                    list = orders.map(r => {\n                        return {\n                            \"UNIT_NO\": \"\",\n                            \"ADDRESS\": `${r.guest.address || ''} ${r.guest.address2 || ''}`,\n                            \"CONTACT_PERSON\": r.guest.name,\n                            \"CONTACT_NUMBER\": r.guest.phone,\n                            \"EMAIL\": \"\",\n                            \"INSTRUCTION_NOTE\": (r.notes || '')\n                        }\n                    });\n                    list = [{\n                        \"UNIT_NO\": \"\",\n                        \"ADDRESS\": `${$settings.settings.address || ''} ${$settings.settings.address2 || ''} ${$settings.settings.postcode || ''}`,\n                        \"CONTACT_PERSON\": $settings.settings.name,\n                        \"CONTACT_NUMBER\": $settings.settings.phone,\n                        \"EMAIL\": \"\",\n                        \"INSTRUCTION_NOTE\": \"PICKUP HERE\"\n                    }, ...list];\n                }\n                break;\n        }\n\n        download(Papa.unparse(list), 'orders.csv', 'text/csv;encoding:utf-8');\n    }\n</script>\n<ModalView>\n    <div slot=\"loader\">\n        {#if loading}\n        <Loading>\n            <div slot=\"message\">\n                Extracting data..\n            </div>\n        </Loading>\n        {/if}\n    </div>\n    <div slot=\"title\" class=\"font-semibold text-xl text-gray-600 pb-3\">\n        Export Orders\n    </div>\n    <div slot=\"content\" class=\"p-2\">\n        <p class=\"text-gray-800 mb-2 text-center\">\n            Select a day to export from\n        </p>\n        <div class=\"flex text-lg font-semibold m-2\">\n            <button on:click=\"{ () => changeDate(-1) }\"><i class=\"far fa-arrow-alt-circle-left\"></i></button>\n            <div class=\"flex-grow self-center text-center\">\n                {selected_date.format('ddd D/M/YY')}\n            </div>\n            <button on:click=\"{ () => changeDate(1) }\"><i class=\"far fa-arrow-alt-circle-right\"></i></button>\n        </div>\n        <p class=\"text-gray-800 my-2 text-center\">\n            Select format to export to\n        </p>\n        <div class=\"flex justify-center\">\n            <Segmented style=\"{field_style}\" label=\"\"\n                segments=\"{[{ name : 'Default', value : ''}, { name : 'Zepto', value : 'zepto'}, { name : 'Mr Speedy', value : 'speedy'}]}\"\n                bind:value=\"{format}\" />\n        </div>\n        <p class=\"text-gray-800 my-2 text-center\">\n            Export Options\n        </p>\n        <div class=\"flex justify-center\">\n            <Segmented style=\"{field_style}\" label=\"\"\n                segments=\"{[{ name : 'Paid', value : 'paid'}, { name : 'All', value : ''}]}\"\n                bind:value=\"{filters.type}\" />\n        </div>\n        <div class=\"flex justify-center mt-2\">\n            <button on:click=\"{do_export}\"\n                class=\"p-2 w-1/2 shadow-md bg-theme text-white rounded-lg capitalize font-bold h-full shadow-md\">\n                Export Now\n            </button>\n        </div>\n        <div class=\"flex justify-center my-2\">\n            <button on:click=\"{pop_modal}\"\n                class=\"p-2 w-1/2 shadow-md bg-gray-400 text-white rounded-lg capitalize font-bold h-full shadow-md\">\n                Cancel\n            </button>\n        </div>\n    </div>\n</ModalView>"],"names":["ctx","pop_modal","support","$settings","settings","fire_id","format","name","value","type","filters","selected_date","dayjs","loading","changeDate","day","add","container","label","fetch","api","sub","$sub","order_type","from","startOf","toJSON","to","endOf","then","data","orders","list","map","r","order_date","createdAt","guest","phone","address","address2","postcode","notes","isPickUp","amount","payment","toFixed","paid","paidAt","invoice","invoice_id","Address(mandatory field)","Contact person","Recipient's phone (mandatory field)","Parcel contents(mandatory field)","Weight in kg(mandatory field)","Internal order number","Comment for courier","Apartment / office number","Need to return on pickup point","Time \"since\" on point","Time \"till\" on point","COD amount","Buyout amount","Do not fill anything in this column","Declared value","Courier needs motorbox","UNIT_NO","ADDRESS","CONTACT_PERSON","CONTACT_NUMBER","EMAIL","INSTRUCTION_NOTE","download","Papa","unparse","process"],"mappings":"o1CAkB+BA,kBAMAC,wdAnBvBC,uFAA6FC,EAAUC,SAASC,qbC4F3GL,4GAAAA,6ZAkBIA,KAAcM,OAAO,+DAQPN,yBACDO,KAAO,UAAWC,MAAQ,KAAOD,KAAO,QAASC,MAAQ,UAAYD,KAAO,YAAaC,MAAQ,uDAClGR,gBAAAA,mEAMEA,yBACDO,KAAO,OAAQC,MAAQ,SAAWD,KAAO,MAAOC,MAAQ,sBACzDR,KAAQS,gBAART,KAAQS,09CAGNT,kBAMAC,oCA3BdD,KAAcM,OAAO,4DAUTN,8DAQAA,KAAQS,s1BA3H7BC,GAAYD,KAAM,QAClBE,EAAgBC,IAASN,EAAS,GAAIO,GAAU,WAE3CC,EAAWC,OAChBJ,EAAgBA,EAAcK,IAAID,EAAK,wBAFvBE,UAAW,WAAYC,MAAO,yBAK9CL,GAAU,GACVM,EAAMC,cAAkBC,IAAKC,EAAKjB,QAASkB,WAAYb,EAAQD,KAAMe,KAAMb,EAAcc,QAAQ,OAAOC,SAAUC,GAAIhB,EAAciB,MAAM,OAAOF,UAAY,OAAOG,KAAKC,QACrKjB,GAAU,YAIDkB,OACTC,YACI1B,OACC,GAEG0B,EAAOD,EAAOE,IAAIC,KAEVC,WAAcvB,EAAMsB,EAAEE,WAAW9B,OAAO,eACxCC,KAAQ2B,EAAEG,MAAM9B,KAChB+B,MAASJ,EAAEG,MAAMC,MACjBC,WAAcL,EAAEG,MAAME,SAAW,MAAML,EAAEG,MAAMG,UAAY,KAC3DC,SAAYP,EAAEG,MAAMI,SACpBC,MAASR,EAAEQ,MACXC,SAAYT,EAAEG,MAAME,QAAU,IAAM,IACpCK,OAAUV,EAAEW,QAAUX,EAAEW,QAAQD,OAAOE,QAAQ,GAAK,QACpDC,KAAQb,EAAEW,QAAUjC,EAAMsB,EAAEW,QAAQG,QAAUd,EAAEE,WAAW9B,OAAO,eAAiB,GACnF2C,wCAA2Cf,EAAEgB,wBAKxD,SAEGlB,EAAOD,EAAOE,IAAIC,KAEViB,8BAA+BjB,EAAEG,MAAME,SAAW,MAAML,EAAEG,MAAMG,UAAY,KAC5EY,iBAAkBlB,EAAEG,MAAM9B,KAC1B8C,sCAAuCnB,EAAEG,MAAMC,MAC/CgB,mCAAoC,OACpCC,gCAAiC,GACjCC,wBAAyBtB,EAAEgB,WAC3BO,sBAAwBvB,EAAEQ,OAAS,GACnCgB,4BAA6B,GAC7BC,iCAAkC,GAClCC,wBAA2BhD,EAAMsB,EAAEE,WAAW9B,OAAO,uBACrDuD,uBAA0BjD,EAAMsB,EAAEE,WAAWpB,IAAI,EAAG,QAAQV,OAAO,uBACnEwD,aAAc,IACdC,gBAAiB,IACjBC,sCAAuC,GACvCC,iBAAkB/B,EAAEW,QAAUX,EAAEW,QAAQD,OAAOE,QAAQ,GAAK,QAC5DoB,yBAA0B,iBAKrC,QAEGlC,EAAOD,EAAOE,IAAIC,KAEViC,QAAW,GACXC,WAAclC,EAAEG,MAAME,SAAW,MAAML,EAAEG,MAAMG,UAAY,KAC3D6B,eAAkBnC,EAAEG,MAAM9B,KAC1B+D,eAAkBpC,EAAEG,MAAMC,MAC1BiC,MAAS,GACTC,iBAAqBtC,EAAEQ,OAAS,MAGxCV,IACImC,QAAW,GACXC,WAAcjE,EAAUC,SAASmC,SAAW,MAAMpC,EAAUC,SAASoC,UAAY,MAAMrC,EAAUC,SAASqC,UAAY,KACtH4B,eAAkBlE,EAAUC,SAASG,KACrC+D,eAAkBnE,EAAUC,SAASkC,MACrCiC,MAAS,GACTC,iBAAoB,kBAClBxC,GAKlByC,EAASC,KAAKC,QAAQ3C,GAAO,aAAc,2BAxEvC4C,CAAQ9C,EAAKC,eA6FajB,GAAY,OAIZA,EAAW,eAQpBR,wBAQAI,EAAQD"}