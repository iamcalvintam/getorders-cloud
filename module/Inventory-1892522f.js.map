{"version":3,"file":"Inventory-1892522f.js","sources":["../../src/InventoryView.html","../../src/Inventory.html"],"sourcesContent":["<script>\n    import { onMount, afterUpdate } from 'svelte'\n    import Toolbar from './UI/UIToolbar.html'\n    import TextField from './UI/UITextField.html'\n    import Segmented from './UI/UISegmented.html'\n    import UIItem from './UI/UIItem.html'\n    import ModalView from './UI/UIModalView.html'\n    import ProductSelectionView from './ProductSelectionView.html'\n    import Loading from './UI/UILoading.html'\n    import { session, api, alert, accounts, modal, apply, fetch, customers, pop_modal, products, s3 } from './CTStore.js';\n    let loading = false, tags, file;\n    export let defaults = {}, account = {}, outlet = {}, inventories = [];\n    let style = { body: 'screen-height', content: 'overflow-y-scroll scrolling-touch' }\n    let tool_style = { container: `justify-end ${loading ? 'opacity-25' : ''}` }\n    let tools = [{ name: \"Close\", icon: \"close-circle\", function: \"pop_modal\" },\n    { name: \"Save\", icon: \"checkmark-circle\", function: \"save\" }]\n \n    async function selected(e) {\n        if (e.detail.function == 'pop_modal') {\n            pop_modal()\n        }\n        if (e.detail.function == 'save') {\n            loading = true;\n            fetch(api(`/inventory`), inventories.map(products => {\n                let soldAt = [];\n                Object.keys(products.soldAt).map(s => { if(products.soldAt[s]==true) soldAt = [...soldAt, parseInt(s)] })\n                return {...products, soldAt}\n            })).then(r => { $apply = { inventory: r }; pop_modal(); });\n        }\n    }\n    function prod_info(prod) {\n        return products.find(p => p.id == parseInt(prod.id)) || { name: \"-\" };\n    }\n    function edit_products() {\n        $modal = [...$modal, { selected_prods: inventories, products : $products, view: ProductSelectionView }]\n    }\n    function remove(prod_id){\n        inventories = inventories.filter(i => i.id != prod_id)\n    }\n    apply.subscribe(cb => {\n        if (cb.selected_prods) {\n            inventories = [...cb.selected_prods.map(p => {\n                if(!p.outlet_id){\n                    p = {...defaults, ...p}\n                    p.product_id = p.id;\n                    p.soldAt = { 0: true, 1: true, 2: true }\n                }\n                return p;\n            })];\n            console.log(inventories);\n            $apply = {};\n        }\n    })\n    let field_style = { container: 'w-1/2 mx-2' }\n</script>\n<style>\n    .sect {\n        @apply text-xl font-bold mt-3 mx-2;\n    }\n    table {\n        @apply w-full;\n    }\n    td {\n        @apply px-2;\n    }\n</style>\n<ModalView style=\"{{ body: 'screen-height', content: 'overflow-y-scroll scrolling-touch' }}\">\n    <div slot=\"loader\">\n        {#if loading}\n  <Loading>\n    <div slot=\"message\">\n      One Moment Please..\n    </div>\n  </Loading>\n    {/if}\n  </div>\n  <div slot=\"title\" class=\"font-semibold text-xl text-gray-600 pb-3\">\n    <b>{outlet.name}</b> Outlet Inventory\n  </div>\n  <div slot=\"content\" class=\"p-2\">\n    <div class=\"rounded-lg p-2 border border-dashed cursor-pointer\" on:click=\"{edit_products}\">\n        <p class=\"text-gray-600\">\n            <i class=\"pr-3 self-center fas fa-plus\"></i>\n            Add Products\n        </p>\n    </div>\n    <table class=\"my-2\">\n        <tr class=\"font-semibold text-theme text-sm text-center\">\n            <td>Product</td>\n            <td class=\"w-6\">Quantity</td>\n            <td>Stores</td>\n            <td>Track</td>\n            <td></td>\n        </tr>\n    {#each inventories as details}\n        <tr class=\"text-center\">\n            <td class=\"text-gray-800 text-left\">{details.name}</td>\n            <td>\n                <input class=\"border border-gray-300 p-1 w-full\" type=\"text\" placeholder=\"10\" bind:value=\"{details.quantity}\" />\n            </td>\n            <td>\n                {#each [{ id:0, name:'Pickup'},{ id:1, name:'Delivery'},{ id:2, name:'Dine-In'}] as shop}\n                <label class=\"px-2 text-sm\">\n                    <input type=checkbox bind:checked={details.soldAt[shop.id]}>\n                    {shop.name}\n                </label>\n                {/each}\n            </td>\n            <td>\n                <input type=checkbox bind:checked={details.track}>\n            </td>\n            <td>\n                <button on:click=\"{ () => remove(details.id) }\">\n                    <i class=\"icon ion-md-close w-8 h-8 text-center\"></i>\n                </button>\n            </td>\n        </tr>\n        {/each}\n    </table>\n  </div>\n  <div slot=\"toolbar\">\n    <Toolbar on:selected=\"{selected}\" tools=\"{tools}\" style=\"{tool_style}\" />\n  </div>\n</ModalView>","<script>\n    import { onMount } from 'svelte';\n    import dayjs from \"dayjs\";\n    import Toolbar from './UI/UIToolbar.html';\n    import Loading from './UI/UILoading.html';\n    import UIItem from './UI/UIItem.html';\n    import InventoryView from './InventoryView.html';\n    import { session, api, alert, apply, modal, fetch, products } from './CTStore.js';\n    let inventories, loading = false, account, outlet;\n    let style = { container: `border-b border-gray-300` }\n    let tools = [{ name: \"Create\", icon: \"add\", function: \"add\" }]\n    onMount(async () => {\n        let o = await fetch(api('/accounts'));\n        account = o[0];\n        outlet = account.outlets.length > 0 ? account.outlets[0] : { id: \"\", name: \"Default\" };\n    });\n    $: if (outlet) {\n        $products = [];\n        loading = true;\n        Promise.all([get_products(),get_inventory()]).then(r=> {\n            loading = false;\n        })\n    }\n    async function get_inventory() {\n        let query = {};\n        if (account.franchise_id) {\n            query = { fran_id: account.franchise_id, outlet_id: outlet.id };\n        }\n        inventories = await fetch(api('/inventory'), query, 'GET');\n    }\n    async function get_products() {\n        loading = true;\n        let prods, query = { fire_id: account.fire_id };\n        if (account.franchise_id) {\n            query = { fran_id: account.franchise_id, outlet_id: outlet.id };\n            try {\n                prods = await fetch(`https://db.getorders.app/products.sl.${account.franchise_id}.${outlet.id}.json`);\n                if (Object.prototype.toString.call(prods) != '[object Array]') {\n                    prods = undefined;\n                }\n                console.log(prods);\n            } catch {\n                console.log(\"S3 not found\");\n            }\n        }\n        if (!prods) {\n            prods = await fetch(api('/guest/products'), query, \"GET\");\n        }\n        $products = prods;\n        loading = false;\n        return $products;\n    }\n\n    apply.subscribe(cb => {\n        if (cb.inventory) {\n            let ids = cb.inventory.map(i => i.product_id);\n            inventories = inventories.filter(i => !ids.includes(i.product_id))\n            inventories = [...cb.inventory, ...inventories];\n            $apply = {};\n        }\n    });\n    function inspect(product) {\n        $modal = [...$modal, { product, view: ProductView }]\n    }\n    function selected(e) {\n        if (e.detail.function == 'add' && !loading) {\n            let defaults = {\n                totals: [],\n                quantity: 0,\n                track: false,\n                enforce: true,\n                outlet_id: outlet.id\n            }\n            $modal = [...$modal, { outlet, defaults: { ...defaults }, view: InventoryView }];\n        }\n    }\n    function toggle(product) {\n        loading = true;\n        let date = new Date();\n        product.deletedAt = product.deletedAt ? null : date;\n\n        fetch(api(`/products`)).then(r => { loading = false; $apply = { product: r } });\n    }\n    function prod_info(prod) {\n        return $products.find(p => '' + p.id == prod.product_id) || { name: \"-\" };\n    }\n</script>\n<style>\n    .sect {\n        @apply text-xl font-bold mt-3 mx-2;\n    }\n\n    table {\n        @apply w-full;\n    }\n\n    td {\n        @apply px-2;\n    }\n</style>\n<div class=\"{ loading ? 'opacity-25' : ''}\">\n    <Toolbar style=\"{style}\" on:selected=\"{selected}\" tools=\"{tools}\" />\n</div>\n<div class=\"border-t border-b border-gray-200 flex\">\n    <div class=\"p-2 flex-none\">\n        <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n            Outlet\n        </label>\n        {#if account}\n        <select class=\"text-xl my-2 w-48\" on:change=\"{ (e) => outlet = account.outlets.find(o => ''+o.id == e.target.value) }\">\n            {#if account.outlets.length==0}\n            <option value=\"0\">Default</option>\n            {/if}\n            {#each account.outlets as outlet,i}\n            <option value=\"{''+outlet.id}\">{outlet.name}</option>\n            {/each}\n        </select>\n        {/if}\n  </div>\n</div>\n\n\n{#if !inventories || loading}\n<Loading type=\"h-64\">\n    <div slot=\"message\">\n      One Moment Please..\n    </div>\n  </Loading>\n{:else}\n<table class=\"my-2\">\n    <tr class=\"font-semibold text-theme text-sm text-center\">\n        <td>Product</td>\n        <td class=\"w-6\">Quantity</td>\n        <td>Current Qty</td>\n        <td>Stores</td>\n        <td>Track</td>\n        <td>Date/Time</td>\n    </tr>\n    {#each inventories as details}\n        <tr class=\"text-center hover:bg-gray-200\">\n            <td class=\"text-gray-800 text-left\">{prod_info(details).name}</td>\n            <td>\n                <input class=\"border border-gray-300 p-1 w-full\" type=\"text\" placeholder=\"10\" bind:value=\"{details.quantity}\" disabled/>\n            </td>\n            <td>\n                {details.total_left}\n            </td>\n            <td>\n                {#each [{ id:0, name:'Pickup'},{ id:1, name:'Delivery'},{ id:2, name:'Dine-In'}] as shop}\n                <label class=\"px-2 text-sm\">\n                    <input type=checkbox checked={details.soldAt.includes(shop.id)} disabled>\n                    {shop.name}\n                </label>\n                {/each}\n            </td>\n            <td>\n                <input type=checkbox bind:checked={details.track} disabled>\n            </td>\n            <td class=\"text-sm text-gray-700\">\n                {dayjs(details.createdAt).format('DD/MM/YYYY h:mmA')}\n            </td>\n        </tr>\n    {/each}\n</table>\n{/if}"],"names":["ctx","name","soldAt","id","quantity","track","length","body","content","loading","defaults","account","outlet","inventories","tool_style","container","remove","prod_id","filter","i","apply","subscribe","cb","selected_prods","map","p","outlet_id","product_id","0","1","2","console","log","$apply","icon","function","e","detail","pop_modal","fetch","api","products","Object","keys","s","parseInt","then","r","inventory","$modal","$products","view","ProductSelectionView","tags","file","details","shop","outlets","includes","total_left","dayjs","createdAt","format","style","get_inventory","query","franchise_id","fran_id","get_products","prods","fire_id","prototype","toString","call","undefined","onMount","o","ids","Promise","all","totals","enforce","InventoryView","prod","find","product","ProductView","date","Date","deletedAt","target","value"],"mappings":"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"}