{"version":3,"file":"OrderSummary-4726714e.js","sources":["../../src/OrderSummary.html"],"sourcesContent":["<svelte:head>\n    <script src=\"https://unpkg.com/papaparse@latest/papaparse.min.js\"></script>\n</svelte:head>\n<script>\n    import { writable, derived, get } from 'svelte/store';\n    import dayjs from \"dayjs\"\n    import Segmented from './UI/UISegmented.html';\n    import Toolbar from './UI/UIToolbar.html';\n    import { api, fetch, session, modal, settings, loading, download, apply } from './CTStore.js';\n    import UIItem from './UI/UIItem.html'\n    let selected_date = dayjs();\n    let filters = writable({ type: \"paid\" }), show_vendor = '';\n    let orders = {}, page = 0, show_more = true, raw_orders = {}, products = [], vendors = [], vendor_list = { 'All Orders': [] };\n    let tools = [{ name: \"Refresh\", icon: \"refresh\", function: \"refresh\" },\n    { name: \"Export\", icon: \"cloud-download\", function: \"export\" }]\n    get_orders(0);\n    fetch(api('/vendor')).then(r => { vendors = r });\n    function selected(e) {\n        switch (e.detail.function) {\n            case \"refresh\":\n                get_orders(0)\n                break;\n            case \"export\":\n                {\n                    let orders = [];\n                    Object.keys(vendor_list).forEach(vendor => {\n                        filter(vendor).forEach(prod_id => {\n                            Object.keys(raw_orders[prod_id]).forEach(variant => {\n                                Object.keys(raw_orders[prod_id][variant]).forEach(mods => {\n                                    let fields = {\n                                        \"Product\": prodFor(prod_id).name,\n                                        \"Variant\": variant,\n                                        \"Modifiers\": mods,\n                                        \"Quantity\": raw_orders[prod_id][variant][mods].quantity,\n                                        \"Total Price\": raw_orders[prod_id][variant][mods].amount.toFixed(2)\n                                    }\n                                    if (vendor != 'All Orders') fields.Vendor = vendor;\n                                    orders = [...orders, fields];\n                                });\n                            });\n                        });\n                    });\n\n                    download(Papa.unparse(orders), 'orders.csv', 'text/csv;encoding:utf-8');\n                }\n                break;\n        }\n    }\n    function get_orders(pg) {\n        if (pg == 0) {\n            show_more = true;\n        }\n        page = pg;\n        $loading = true;\n        fetch(api(`/orders`), { groupBy: \"products\", order_type: $filters.type, from: selected_date.startOf('day').toJSON(), to: selected_date.endOf('day').toJSON() }, 'GET').then(data => {\n            $loading = false;\n            raw_orders = data.variants;\n            products = data.products;\n            process_products();\n        });\n    }\n    function prodFor(prod_id) {\n        return products.find(p => p.id.toString() == prod_id) || { name: \"-\" };\n    }\n    function filter(vendor) {\n        return vendor == 'All Orders' ? Object.keys(raw_orders) : Object.keys(raw_orders).filter(r => vendor_list[vendor].includes(r));\n    }\n    filters.subscribe(v => { get_orders(0) });\n    $: if (show_vendor == 'true') {\n        let list = {}\n        vendors.forEach(v => {\n            list[v.name] = v.products.map(p => p.id);\n        });\n        vendor_list = list;\n    } else {\n        vendor_list = { 'All Orders': [] };\n    }\n    function calc(sum, item) {\n        return parseFloat(sum) + parseFloat(item.unit_price) * item.quantity;\n    }\n    function message(order) {\n        let phone = order.guest.phone;\n        if (phone.startsWith('01')) phone = \"6\" + phone;\n        let url = `https://api.whatsapp.com/send?phone=${phone}&text=`, msg = \"\";\n        if (order.payment) {\n            msg = `Hey there! We *(${$settings.settings.name})* have received your order, tap here to pay now.`;\n            msg = `${msg} üëâüèª https://pay.getorders.app/?i=${order.invoice_id}\\n\\n`;\n        }\n        let txt = encodeURIComponent(msg)\n        document.location.href = `${url}${txt}`;\n    }\n    let status_colors = ['bg-gray-400', 'bg-gray-400', 'bg-gray-400', 'bg-yellow-500', 'bg-red-400', 'bg-green-500', 'bg-pink-500', 'bg-theme']\n    function changeDate(day) {\n        selected_date = selected_date.add(day, 'day');\n        get_orders(0);\n    }\n    let field_style = { container: \"p-2 flex-none\", label: \"w-32\" }\n</script>\n<style>\n    .action {\n        @apply rounded-full text-white mr-3 w-16 h-16 text-center self-center text-2xl flex-none shadow-md;\n    }\n\n    td {\n        @apply p-2;\n    }\n</style>\n<Toolbar class=\"border-b border-gray-300\" on:selected=\"{selected}\" tools=\"{tools}\" />\n<div class=\"border-t border-b border-gray-200 flex\">\n    <Segmented style=\"{field_style}\" label=\"Orders Filter\"\n        segments=\"{[{ name : 'Paid', value : 'paid'}, { name : 'All', value : 'all'}]}\" bind:value=\"{$filters.type}\" />\n    <Segmented style=\"{field_style}\" label=\"Display\"\n        segments=\"{[{ name : 'All', value : ''}, { name : 'By Vendor', value : 'true'}]}\" bind:value=\"{show_vendor}\" />\n</div>\n<div class=\"flex text-lg font-semibold m-2\">\n    <button on:click=\"{ () => changeDate(-1) }\"><i class=\"far fa-arrow-alt-circle-left\"></i></button>\n    <div class=\"flex-grow self-center text-center\">\n        {selected_date.format('ddd D/M/YY')}\n    </div>\n    <button on:click=\"{ () => changeDate(1) }\"><i class=\"far fa-arrow-alt-circle-right\"></i></button>\n</div>\n<div class=\"m-2\">\n    <table class=\"w-full\">\n        <tr class=\"bg-theme text-white rounded-lg\">\n            <td>Product</td>\n            <td>Variant</td>\n            <td>Modifiers</td>\n            <td>Quantity</td>\n            <td>Total Price</td>\n        </tr>\n        {#each Object.keys(vendor_list) as vendor}\n        <tr class=\"bg-gray-600 text-white\">\n            <td>{vendor}</td><td></td><td></td><td></td><td></td>\n        </tr>\n        {#each filter(vendor) as prod_id}\n        {#each Object.keys(raw_orders[prod_id]) as variant}\n        {#each Object.keys(raw_orders[prod_id][variant]) as mods}\n    <tr>\n        <td>{prodFor(prod_id).name}</td>\n        <td>{variant}</td>\n        <td>{mods}</td>\n        <td>{raw_orders[prod_id][variant][mods].quantity}</td>\n        <td>{raw_orders[prod_id][variant][mods].amount.toFixed(2)}</td>\n    </tr>\n        {/each}\n        {/each}\n        {/each}\n        {/each}\n    </table>\n</div>"],"names":["ctx","name","quantity","amount","toFixed","Object","keys","length","format","value","type","selected_date","dayjs","filters","writable","show_vendor","page","show_more","raw_orders","products","vendors","vendor_list","All Orders","get_orders","pg","$loading","fetch","api","groupBy","order_type","$filters","from","startOf","toJSON","to","endOf","then","data","variants","process_products","prodFor","prod_id","find","p","id","toString","filter","vendor","r","includes","subscribe","v","changeDate","day","add","list","forEach","map","icon","function","e","detail","orders","variant","mods","fields","Product","Variant","Modifiers","Quantity","Total Price","Vendor","download","Papa","unparse","container","label","order","phone","guest","startsWith","url","msg","payment","$settings","settings","invoice_id","txt","encodeURIComponent","document","location","href"],"mappings":"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"}