{"version":3,"file":"Rewards-9f929b84.js","sources":["../../src/RewardsEditor.html","../../src/Rewards.html"],"sourcesContent":["<script>\n  import ModalView from './UI/UIModalView.html';\n  import { session, selected_obj, api, loading } from './CTStore.js';\n  //Options\n  let error_screen;\n  let cond_types = { points : { amount : 0, notes : \"Amount of points to deduct for this reward.\" }, \n                    spending : { amount : 0, min_qty : 0, notes : \"Amount of spending & products quantity to claim this reward.\" }, \n                    is_new : { qty: 1, notes : \"A new member can claim this reward for the first (x qty) of orders.\" }};\n  let action_types = { bill_discount : { amount : 0, notes : \"Amount of discount to give on bill\"}, \n                      bill_deduct : { amount : 0, notes : \"Amount to deduct from bill\"},\n                      add_points : { points : 0, multiplier : 0, notes : \"Extra points to award/Override current multiplier\"}};\n  let type_name = { amount : 'Amount', min_qty : 'Minimum Quantity', points : 'Extra Points', multiplier : 'Or Multiplier (x)',\n                   bill_discount : 'Discount On Bill', bill_deduct : 'Deduct From Bill', add_points : 'Point Earnings', \n                   points : 'Points', spending : 'Spending', is_new : 'New Member', qty : 'Quantity'}\n  let reward = $selected_obj;\n  if(!reward._id){\n    reward = { name : \"\", conditions : [], actions : [], outlets : [], active : true}\n  } else {\n        console.log(reward)\n    var all_c_keys = Object.keys(cond_types).map(r => Object.keys(cond_types[r])).flat();\n    var all_a_keys = Object.keys(action_types).map(r => Object.keys(action_types[r])).flat();\n\n\n    reward.conditions = reward.conditions.map(r => addKeys(r, Array.from(new Set(all_c_keys))));\n    reward.actions = reward.actions.map(r => addKeys(r, Array.from(new Set(all_a_keys))));\n    console.log(reward)\n  }\n  function addCondition(){\n    reward.conditions = [...reward.conditions, { id: Date.now(), type : 'points', amount : 0, min_qty : 1, qty : 1}]\n  }\n  function addActions(){\n    reward.actions = [...reward.actions, { id: Date.now(), type : 'bill_discount', amount : 0, points : 0, multiplier : 1}]\n  }\n  function remove(type,idx){\n    reward[type] = reward[type].filter(r => r.id != idx);\n  }\n  function addKeys(raw,keys) {\n   keys.forEach(r => { if(!raw[r]) { raw[r] = 0; } }) \n    return raw\n  }\n  function cleanObj(raw,allowed) {\n    allowed = [...allowed, 'type'];\n    return Object.keys(raw)\n        .filter(key => allowed.includes(key))\n        .reduce((obj, key) => {\n            obj[key] = key=='type' ? raw[key] : parseInt(raw[key]);\n            return obj;\n        }, {});\n  }\n  function save(){\n    var errors = [];\n    if(reward.name == \"\") errors.push(\"Provide a name for this reward.\")\n    if(reward.conditions.length == 0) errors.push(\"A minimum of 1 condition is required.\")\n    if(reward.actions.length == 0) errors.push(\"A minimum of 1 action is required.\")\n    var thisReward = reward;\n    thisReward.conditions = reward.conditions.map(r => cleanObj(r, Object.keys(cond_types[r.type])));\n    thisReward.actions = reward.actions.map(r => cleanObj(r, Object.keys(action_types[r.type])));\n    console.log(thisReward);\n    if(errors.length>0){\n      error_screen = errors;\n    } else {\n      $loading = true;\n    (async() => {\n        const header = { method: \"POST\", headers: {\n          'Authorization': $session.idToken,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }, body: JSON.stringify(thisReward)};\n        await fetch(api(`/rewards`),header).then(r => { $loading = false; $selected_obj.refresh = new Date() });\n    })();\n    }\n  }\n</script>\n<style>\n  paper-button {\n    width:200px;\n    height:40px;\n  }\n</style>\n<ModalView>\n<div slot=\"title\" class=\"bg-gray-300 shadow-md m-0 p-2 align-middle\">\n  <paper-icon-button icon=\"close\" on:click=\"{ () => $selected_obj.class = undefined }\"></paper-icon-button>\n        <div class=\"inline-block align-middle text-xl text-bold\" main-title> Reward Editor</div>\n        <button on:click=\"{save}\" class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded inline-block align-middle float-right h-6 shadow\">\n          Save\n        </button>\n  </div>\n  <div slot=\"content\">\n    <div class=\"flex\">\n    <div class=\"w-3/4 relative border rounded mx-3 my-3 shadow appearance-none label-floating overflow-hidden\">\n      <input bind:value=\"{reward.name}\" class=\"w-full px-3 py-2 text-gray-700 leading-normal rounded\" id=\"name\" type=\"text\" placeholder=\"Reward Name\">\n          <label class=\"absolute block text-gray-700 top-0 left-0 w-full px-3 py-2 leading-normal\" for=\"name\">Reward Name</label>\n    </div>\n    <div class=\"w-1/4 my-3 pt-2\">\n            <div class=\"inline-flex px-3 pb-3\">\n  <button on:click=\"{ () => reward.active = true }\" \n          class=\"bg-gray-{ reward.active==true ? '600' : '100'} hover:bg-gray-200 text-gray-{ reward.active==true ? '100' : '400'} font-bold py-2 px-4 rounded-l\">\n    Active\n  </button>\n  <button on:click=\"{ () => reward.active = false }\" \n          class=\"bg-gray-{ reward.active==false ? '600' : '100'} hover:bg-gray-200 text-gray-{ reward.active==false ? '100' : '400'} font-bold py-2 px-4 rounded-r\">\n    Disabled\n  </button>\n</div>\n    </div>\n      \n    </div>\n    <div class=\"flex\">\n    <div class=\"w-1/2\">\n        <p class=\"text-xl my-3 font-semibold\"><i class=\"fas fa-asterisk pr-3\"></i> Conditions</p>\n    </div>\n    <div class=\"w-1/2 text-right\">\n      <button on:click=\"{addCondition}\" class=\"bg-gray-600 hover:bg-gray-400 text-white font-bold py-2 px-4 mt-2 rounded\">\n        <i class=\"fas fa-plus\"></i>\n      </button>\n    </div>\n    </div>\n    {#each reward.conditions as condition}\n      <div class=\"border mx-3 my-3 p-3 shadow overflow-hidden\">\n        <div class=\"border-b\">\n          <span class=\"inline-block align-center text-gray-600 pr-2 font-bold\">Type</span>\n<div class=\"inline-flex px-3 pb-3\">\n  {#each Object.keys(cond_types) as type}\n  <button on:click=\"{ () => condition.type = type }\" \n          class=\"capitalize bg-gray-{ condition.type==type ? '600' : '100'} hover:bg-gray-200 text-gray-{ condition.type==type ? '100' : '400'} font-bold py-2 px-4\">\n    {type_name[type]}\n  </button>\n  {/each}\n</div>\n          <button class=\"py-2 px-4 text-white float-right bg-red-600 hover:bg-red-300 rounded\" on:click=\"{ () => remove('conditions',condition.id)}\">\n            <i class=\"fas fa-minus\"></i>\n          </button>\n        </div>\n        {#each Object.keys(cond_types[condition.type]) as param}\n        {#if param == 'notes'}\n        <p class=\"text-gray-500\">\n          {cond_types[condition.type][param]}\n        </p>\n        {:else}\n        <div class=\"relative border rounded mx-3 my-3 shadow appearance-none label-floating overflow-hidden\">\n      <input bind:value=\"{condition[param]}\" class=\"w-full px-3 py-2 text-gray-700 leading-normal rounded\" type=\"text\" placeholder=\"{type_name[param]}\">\n          <label class=\"absolute block text-gray-700 top-0 left-0 w-full px-3 py-2 capitalize\">{type_name[param]}</label>\n    </div>\n        {/if}\n        {/each}\n      </div>\n    {/each}\n    <div class=\"flex\">\n    <div class=\"w-1/2\">\n        <p class=\"text-xl my-3 font-semibold\"><i class=\"fas fa-percent pr-3\"></i> Actions</p>\n    </div>\n    <div class=\"w-1/2 text-right\">\n      <button on:click=\"{addActions}\" class=\"bg-gray-600 hover:bg-gray-400 text-white font-bold py-2 px-4 mt-2 rounded\">\n        <i class=\"fas fa-plus\"></i>\n      </button>\n    </div>\n    </div>\n        {#each reward.actions as action}\n      <div class=\"border mx-3 my-3 p-3 shadow overflow-hidden\">\n        <div class=\"border-b\">\n          <span class=\"inline-block align-center text-gray-600 pr-2 font-bold\">Type</span>\n<div class=\"inline-flex px-3 pb-3\">\n  {#each Object.keys(action_types) as type}\n  <button on:click=\"{ () => action.type = type }\" \n          class=\"capitalize bg-gray-{ action.type==type ? '600' : '100'} hover:bg-gray-200 text-gray-{ action.type==type ? '100' : '400'} font-bold py-2 px-4\">\n    {type_name[type]}\n  </button>\n  {/each}\n</div>\n          <button class=\"py-2 px-4 text-white float-right bg-red-600 hover:bg-red-300 rounded\" on:click=\"{ () => remove('actions',action.id)}\">\n            <i class=\"fas fa-minus\"></i>\n          </button>\n        </div>\n        {#each Object.keys(action_types[action.type]) as param}\n        {#if param == 'notes'}\n        <p class=\"text-gray-500\">\n          {action_types[action.type][param]}\n        </p>\n        {:else}\n        <div class=\"relative border rounded mx-3 my-3 shadow appearance-none label-floating overflow-hidden\">\n      <input bind:value=\"{action[param]}\" class=\"w-full px-3 py-2 text-gray-700 leading-normal rounded\" type=\"text\" placeholder=\"{type_name[param]}\">\n          <label class=\"absolute block text-gray-700 top-0 left-0 w-full px-3 py-2 capitalize\">{type_name[param]}</label>\n    </div>\n        {/if}\n        {/each}\n      </div>\n    {/each}\n  {#if error_screen}\n  <div class=\"flex flex-col justify-center h-full z-10 absolute top-0 w-full p-0 m-0\" style=\"background-color: rgba(0,0,0,0.3);\">\n    <div class=\"bg-gray-600 text-white px-4 py-2 w-3/4 m-auto rounded shadow\">\n      <div class=\"text-xl m-3\">\n      <ul>\n        {#each error_screen as error}\n        <li>&middot; {error}</li>\n        {/each}\n      </ul>\n      </div>\n      <p class=\"text-center\">\n        <button on:click=\"{ () => error_screen = undefined }\" class=\"hover:text-gray-400 text-white\">\n          <i class=\"far fa-times-circle fa-3x\"></i>\n        </button>\n      </p>\n    </div>\n  </div>\n{/if}    \n  </div>\n</ModalView>\n\n\n","<script>\n  import { onMount } from 'svelte';\n  import RewardsEditor from './RewardsEditor.html'\n  import { session, loading, api, alert, accounts, trigger, selected_obj, modal, headers} from './CTStore.js';\n  let rewards = [];\n  selected_obj.subscribe(val => {\n    console.log(val);\n    if(val.class=='rewards_edit' && val.refresh){\n      refresh();\n      $selected_obj.class = undefined;\n      delete $selected_obj.refresh;\n    }\n  });\n  function refresh(){\n    $loading = true;\n\n    fetch(api(`/rewards`),headers()).then(r => { $loading = false; return r.json() }).then(r => { rewards = r });\n  \n  }\n  refresh();\n</script>\n  <div class=\"border-b border-gray-300 p-3 m-0\">\n    <button on:click=\"{ () => { $modal = [...$modal, { view : RewardsEditor }] } }\"><i class=\"fas fa-plus pr-3\"></i> Add New</button>\n  </div>\n{#if rewards.length > 0}\n{#each rewards as reward (reward._id)}\n<paper-item class=\"flex\" on:click=\"{ () => $selected_obj = {...reward, class : 'rewards_edit'}}\">\n  <div class=\"flex-1 px-4 py-2 m-2\">\n    {reward.name}\n  </div>\n  <span class=\"inline-block bg-{reward.active ? 'green-500' : 'gray-400'} rounded p-2 text-sm font-semibold text-white mr-2 flex-none\">\n    {reward.active ? 'Active' : 'Disabled'}\n  </span>\n</paper-item>\n{/each}\n{:else}\n<p class=\"text-center text-2xl text-gray-600 my-auto\">\n  <i class=\"far fa-times-circle block\"></i>\nNo Rewards Found.\n</p>\n{/if}"],"names":["ctx","type","Object","keys","length","conditions","actions","active","name","addKeys","raw","forEach","r","cleanObj","allowed","filter","key","includes","reduce","obj","parseInt","error_screen","cond_types","points","amount","notes","spending","min_qty","is_new","qty","action_types","bill_discount","bill_deduct","add_points","multiplier","reward","$selected_obj","_id","console","log","all_c_keys","map","flat","all_a_keys","Array","from","Set","outlets","remove","idx","id","Date","now","errors","push","thisReward","$loading","header","method","headers","Authorization","$session","idToken","Accept","Content-Type","body","JSON","stringify","fetch","api","then","refresh","class","undefined","condition","param","action","rewards","json","selected_obj","subscribe","val","$modal","view","RewardsEditor"],"mappings":"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"}