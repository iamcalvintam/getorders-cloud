{"version":3,"file":"Vendors-f40262c4.js","sources":["../../src/ProductSelectionView.html","../../src/VendorView.html","../../src/Vendors.html"],"sourcesContent":["<script>\n    import { onMount } from 'svelte';\n    import Toolbar from './UI/UIToolbar.html'\n    import ModalView from './UI/UIModalView.html'\n    import TextField from './UI/UITextField.html'\n    import Loading from './UI/UILoading.html'\n    import UIItem from './UI/UIItem.html'\n    import { session, api, alert, accounts, modal, apply, customers, pop_modal } from './CTStore.js';\n    export let products = [], selected_prods = [];\n    let field_style = { container: 'w-full' }\n    let style = { body: 'screen-height-xs', content: 'overflow-y-scroll scrolling-touch' }\n    let tools = [{ name: \"Close\", icon: \"close-circle\", function: \"pop_modal\" },\n    { name: \"Save\", icon: \"checkmark-circle\", function: \"save\" }]\n    let tool_style = { container: \"justify-end\" }\n    function selected(e) {\n        if (e.detail.function == 'pop_modal') {\n            pop_modal()\n        }\n        if (e.detail.function == 'save') {\n            $apply = { selected_prods };\n            pop_modal()\n        }\n    }\n    function contains(product) {\n        return selected_prods.find(p => p.id == product.id)\n    }\n    function toggle(product) {\n        let len = selected_prods.length\n        selected_prods = selected_prods.filter(p => p.id != product.id)\n        if (selected_prods.length == len) {\n            //Add\n            selected_prods = [...selected_prods, { id: '' + product.id, name: product.name }]\n        }\n        products = products;\n    }\n</script>\n<ModalView style=\"{style}\">\n    <div slot=\"title\" class=\"font-semibold text-xl text-gray-600 pb-3\">\n        Select Products\n    </div>\n    <div slot=\"content\" class=\"p-2\">\n        {#each products as product}\n            <UIItem>\n              <div class=\"flex w-full m-3\" on:click=\"{ () => { toggle(product) } }\">\n                <i class=\"pr-3 self-center fas { contains(product) ? 'fa-check-square' : 'fa-square' }\"></i>\n                {product.name}\n              </div>\n            </UIItem>\n        {/each}\n    </div>\n    <div slot=\"toolbar\">\n        <Toolbar on:selected=\"{selected}\" tools=\"{tools}\" style=\"{tool_style}\" />\n    </div>\n</ModalView>","<script>\n    import { onMount, afterUpdate } from 'svelte'\n    import Toolbar from './UI/UIToolbar.html'\n    import TextField from './UI/UITextField.html'\n    import ModalView from './UI/UIModalView.html'\n    import ProductSelectionView from './ProductSelectionView.html'\n    import Loading from './UI/UILoading.html'\n    import { session, api, alert, accounts, modal, apply, fetch, customers, pop_modal, s3 } from './CTStore.js';\n    let loading = false, tags, file, products = [];\n    export let vendor = {}, account = {};\n    let style = { body: 'screen-height', content: 'overflow-y-scroll scrolling-touch' }\n    let tool_style = { container: \"justify-end\" }\n    let tools = [{ name: \"Close\", icon: \"close-circle\", function: \"pop_modal\" },\n    { name: \"Save\", icon: \"checkmark-circle\", function: \"save\" }]\n    if (vendor.outlet_id != \"\") {\n        get_products().then(r => {\n            vendor.products = vendor.products;\n        })\n\n    }\n    function reset_outlet() {\n        vendor.products = [];\n        get_products();\n    }\n    async function get_products() {\n        loading = true;\n        products = await fetch(api('/guest/products'), { fran_id: account.franchise_id, outlet_id: vendor.outlet_id }, \"GET\");\n        loading = false;\n        return products;\n    }\n    function selected(e) {\n        if (e.detail.function == 'pop_modal') {\n            pop_modal()\n        }\n        if (e.detail.function == 'save') {\n            loading = true;\n            fetch(api(`/vendor`), vendor).then(r => { $apply = { vendor: r }; pop_modal(); });\n        }\n    }\n    function prod_info(prod) {\n        return products.find(p => p.id == parseInt(prod.id)) || { name: \"-\" };\n    }\n    function edit_products() {\n        $modal = [...$modal, { selected_prods: vendor.products, products, view: ProductSelectionView }]\n    }\n    apply.subscribe(cb => {\n        if (cb.selected_prods) {\n            vendor.products = cb.selected_prods;\n            $apply = {};\n        }\n    })\n    let field_style = { container: 'w-1/2 mx-2' }\n</script>\n<style>\n    .sect {\n        @apply text-xl font-bold mt-3 mx-2;\n    }\n</style>\n<ModalView style=\"{{ content: 'overflow-y-scroll scrolling-touch' }}\">\n    <div slot=\"loader\">\n        {#if loading}\n  <Loading>\n    <div slot=\"message\">\n      One Moment Please..\n    </div>\n  </Loading>\n    {/if}\n  </div>\n  <div slot=\"title\" class=\"font-semibold text-xl text-gray-600 pb-3\">\n    { vendor._id ? 'Edit Vendor' : 'Create Vendor'}\n  </div>\n  <div slot=\"content\">\n    <div class=\"flex mb-2\">\n        <TextField style=\"{field_style}\" label=\"Vendor Name\" placeholder=\"Enter vendor name\" bind:value=\"{vendor.name}\" />\n        <TextField style=\"{field_style}\" prefix=\"+6\" label=\"Phone\" placeholder=\"012345678\" bind:value=\"{vendor.phone}\" />\n    </div>\n    <p class=\"sect text-theme\">\n        Business Details\n    </p>\n    <div class=\"flex mb-2\">\n        <TextField style=\"{field_style}\" label=\"Unit/Building No\" placeholder=\"\" bind:value=\"{vendor.unit_no}\" />\n        <TextField style=\"{field_style}\" label=\"Address\" placeholder=\"\" bind:value=\"{vendor.address}\" />\n    </div>\n    <div class=\"flex mb-2\">\n        <TextField style=\"{field_style}\" label=\"Postcode\" placeholder=\"\" bind:value=\"{vendor.postcode}\" />\n    </div>\n    <div class=\"flex mb-2\">\n        <TextField style=\"{field_style}\" label=\"Bank Branch\" placeholder=\"E.g : Maybank\" bind:value=\"{vendor.bank_type}\" />\n        <TextField style=\"{field_style}\" label=\"Bank Account\" placeholder=\"Account No\" bind:value=\"{vendor.bank_acc}\" />\n    </div>\n    <p class=\"sect text-theme\">\n        Vendor Products\n    </p>\n    <div class=\"m-2\">\n        <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">Drop Point Outlet</label>\n        <select class=\"text-xl my-2 w-48\" bind:value=\"{vendor.outlet_id}\" on:change=\"{reset_outlet}\">\n            <option value=\"\">Select Outlet</option>\n            {#each account.outlets as outlet,i}\n            <option value=\"{''+outlet.id}\">{outlet.name}</option>\n            {/each}\n        </select>\n    <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">Selected Products</label>\n    <div class=\"border rounded shadow-sm p-2 w-full flex cursor-pointer { products.length>0 ? '' : 'opacity-25' }\" on:click=\"{edit_products}\">\n        <div class=\"flex-grow\">\n            {#if vendor.products.length > 0}\n                    {#each vendor.products as prod}\n                    <span class=\"inline-block p-2 rounded-lg text-xs bg-theme text-white m-1\">{prod_info(prod).name}</span>\n                    {/each}\n                {:else}\n                    <p class=\"text-gray-500\">No products selected.</p>\n                {/if}\n            </div>\n            <i class=\"icon ion-md-expand text-gray-600 self-center\"></i>\n            </div> \n    </div>\n  </div>\n    <div slot=\"toolbar\">\n    <Toolbar on:selected=\"{selected}\" tools=\"{tools}\" style=\"{tool_style}\" />\n  </div>\n</ModalView>","<script>\n    import { onMount } from 'svelte';\n    import Toolbar from './UI/UIToolbar.html';\n    import Loading from './UI/UILoading.html';\n    import UIItem from './UI/UIItem.html';\n    import VendorView from './VendorView.html';\n    import { session, api, alert, apply, modal, fetch } from './CTStore.js';\n    let vendors, accounts, loading = false;\n    let style = { container: \"border-b border-gray-300\" }\n    let tools = [{ name: \"Create\", icon: \"add\", function: \"add\" }]\n    onMount(() => {\n        fetch(api('/vendor')).then(r => { vendors = r });\n        fetch(api('/accounts')).then(o => { accounts = o })\n    });\n    function inspect(vendor) {\n        $modal = [...$modal, { vendor, account: accounts[0], view: VendorView }]\n    }\n    function selected(e) {\n        if (e.detail.function == 'add') {\n            let vendor_schema = {\n                name: \"\",\n                phone: \"\",\n                address: \"\",\n                unit_no: \"\",\n                postcode: \"\",\n                products: [],\n                bank_type: \"\",\n                bank_acc: \"\",\n                notes: \"\",\n                outlet_id: \"\"\n            };\n            $modal = [...$modal, { vendor: { ...vendor_schema }, account: accounts[0], view: VendorView }]\n        }\n    }\n    function outlet(oid) {\n        return accounts[0].outlets.find(o => '' + o.id == oid) || { name: '-' };\n    }\n    apply.subscribe(cb => {\n        if (cb.vendor) {\n            let vendor = vendors.find(p => p._id == cb.vendor._id)\n            if (vendor) {\n                vendors = vendors.map(p => p._id == cb.vendor._id ? cb.vendor : p)\n            } else {\n                vendors = [...vendors, cb.vendor]\n            }\n            $apply = {};\n        }\n    });\n</script>\n<Toolbar style=\"{style}\" on:selected=\"{selected}\" tools=\"{tools}\" />\n{#if !vendors || !accounts || loading}\n<Loading type=\"h-64\">\n    <div slot=\"message\">\n      One Moment Please..\n    </div>\n  </Loading>\n{:else}\n<div class=\"flex p-3 text-gray-400 font-semibold uppercase text-xs\">\n    <div class=\"flex-grow\">Vendor Name</div>\n    <div class=\"flex-none w-20\">Products</div>\n    <div class=\"flex-none w-20\">Outlet</div>\n</div>\n{#each vendors as vendor}\n<UIItem>\n  <div class=\"flex w-full p-3\" on:click=\"{ () => { inspect(vendor) } }\">\n    <div class=\"flex-grow\">\n       {vendor.name}\n    </div>\n    <div class=\"flex-none w-20\">{vendor.products.length} items</div>\n    <div class=\"flex-none w-20 text-left\">\n        {outlet(vendor.outlet_id).name}\n    </div>\n  </div>\n</UIItem>\n{/each}\n{/if}"],"names":["ctx","name","length","products","selected_prods","toggle","product","len","filter","p","id","body","content","icon","function","container","e","detail","pop_modal","$apply","find","_id","phone","unit_no","address","postcode","bank_type","bank_acc","outlets","outlet_id","loading","vendor","account","get_products","fetch","api","fran_id","franchise_id","then","r","apply","subscribe","cb","prod","parseInt","$modal","view","ProductSelectionView","tags","file","vendors","accounts","inspect","VendorView","onMount","o","map","vendor_schema","notes","oid"],"mappings":"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"}