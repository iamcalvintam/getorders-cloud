{"version":3,"file":"OrdersExport-d63d902d.js","sources":["../../src/ActivatePay.html","../../node_modules/dayjs/plugin/relativeTime.js","../../src/OrderInspect.html","../../src/OrdersExport.html"],"sourcesContent":["<script>\n    import { onMount, afterUpdate } from 'svelte'\n    import ModalView from './UI/UIModalView.html'\n    import { support, api, settings, accounts, modal, pop_modal } from './CTStore.js';\n    function contact() {\n        support(`Hello, I would like to activate payments for my GetOrders account.\\n üëâüèª My ID : ${$settings.settings.fire_id}`);\n    }\n</script>\n<ModalView>\n    <div slot=\"title\" class=\"font-semibold text-xl text-gray-600 pb-3\">\n        Activate GetPayments\n    </div>\n    <div slot=\"content\" class=\"h-64 p-2\">\n        <p class=\"text-gray-800 mb-6 text-center\">\n            In order to accept payments, your account has to first activate <b>GetPayments</b>.<br>\n            Tap here to contact our support to activate now.\n        </p>\n        <div class=\"flex justify-center mt-2\">\n            <button on:click=\"{contact}\"\n                class=\"p-2 w-1/2 shadow-md bg-theme text-white rounded-lg capitalize font-bold h-full shadow-md\">\n                Contact Support\n            </button>\n        </div>\n        <div class=\"flex justify-center mt-2\">\n            <button on:click=\"{pop_modal}\"\n                class=\"p-2 w-1/2 shadow-md bg-gray-400 text-white rounded-lg capitalize font-bold h-full shadow-md\">\n                Cancel\n            </button>\n        </div>\n    </div>\n</ModalView>","!function(r,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):r.dayjs_plugin_relativeTime=t()}(this,function(){\"use strict\";return function(r,t,e){var n=t.prototype;e.en.relativeTime={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};var o=function(r,t,n,o){for(var d,i,u,a=n.$locale().relativeTime,f=[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],s=f.length,l=0;l<s;l+=1){var h=f[l];h.d&&(d=o?e(r).diff(n,h.d,!0):n.diff(r,h.d,!0));var m=Math.round(Math.abs(d));if(u=d>0,m<=h.r||!h.r){1===m&&l>0&&(h=f[l-1]);var c=a[h.l];i=\"string\"==typeof c?c.replace(\"%d\",m):c(m,t,h.l,u);break}}return t?i:(u?a.future:a.past).replace(\"%s\",i)};n.to=function(r,t){return o(r,t,this,!0)},n.from=function(r,t){return o(r,t,this)};var d=function(r){return r.$u?e.utc():e()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}});\n","<script>\n  import { onMount, afterUpdate } from 'svelte'\n  import Segmented from './UI/UISegmented.html';\n  import dayjs from \"dayjs\"\n  import { writable } from 'svelte/store';\n  import Toolbar from './UI/UIToolbar.html'\n  import relativeTime from 'dayjs/plugin/relativeTime'\n  import ModalView from './UI/UIModalView.html'\n  import Loading from './UI/UILoading.html'\n  import { support, api, settings, accounts, modal, pop_modal, fetch, apply, sub } from './CTStore.js';\n  export let order = {};\n  let start_up = false; //First fire from status change is false\n  let tools = [{ name: \"Order Link\", icon: \"paper-plane\", function: \"link\" }, { name: \"Close\", icon: \"close-circle\", function: \"pop_modal\" }], loading = false;\n  let tool_style = { container: \"justify-end\" }\n  if ($settings.settings && $settings.settings.delivery_token) {\n    if (order.delivery) {\n      tools = [{ name: \"Track Delivery\", icon: \"cube\", function: \"track\" }, ...tools]\n    } else {\n      tools = [{ name: \"Request Delivery\", icon: \"cube\", function: \"deliver\" }, ...tools]\n    }\n  }\n  dayjs.extend(relativeTime)\n  function selected(e) {\n    if (e.detail.function == 'pop_modal') {\n      pop_modal()\n    }\n    if (e.detail.function == 'link') {\n      window.open(`https://pay.getorders.app/?i=${order.invoice_id}`, '_blank');\n    }\n    if (e.detail.function == 'track') {\n      window.open(`https://www.tracking.my/matdespatch/${order.delivery.tracking_no}`, '_blank');\n    }\n    if (e.detail.function == 'deliver' && $settings.settings.delivery_token) {\n      loading = true;\n      fetch(api('/deliver'), { order_id: order.invoice_id }).then(r => {\n        if (r._id) {\n          order.delivery = r;\n          $apply = { order };\n          pop_modal();\n        } else {\n          alert('Delivery request failed. Despatch might be busy, try again.');\n        }\n        loading = false;\n      });\n    }\n  }\n  function calc(sum, item) {\n    return parseFloat(sum) + parseFloat(item.unit_price) * item.quantity;\n  }\n  function replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n  }\n  function addressFormat(str) {\n    return replaceAll(replaceAll(str, ', ', ','), ',', ', ')\n  }\n  function phoneFormat(str) {\n    if (!str) return \"\"\n    let arr = str.match(/.{3}|.{1,2}/g)\n    let num = \"\"\n    arr.forEach((r, i) => {\n      num += r + (i < 2 ? \"<span class='text-gray-600 px-1'>-</span>\" : \"\")\n    });\n    return num;\n  }\n  function showMod(mod) {\n    let prefix = mod.mode == 1 ? '+ ' : mod.mode == 2 ? '- ' : '', suffix = mod.mode == 3 ? '% ' : '';\n    let mod_amt = parseFloat(mod.amount);\n    let amt = mod_amt > 0 ? ` ${prefix}${mod_amt.toFixed(2)}${suffix}` : '';\n    return `${mod.name}${amt}`;\n  }\n  loading = true;\n  fetch(api('/guest/invoice'), { order_id: order.invoice_id }, \"GET\").then(r => {\n    loading = false;\n    order = { ...order, ...r };\n  })\n  let style = { content: 'overflow-y-scroll scrolling-touch' }\n  let field_style = { container: \"m-auto table\" }\n  let order_status = writable(order.status);\n  order_status.subscribe(status => {\n    if (!start_up) {\n      start_up = true;\n    } else {\n      order.status = status;\n      loading = true;\n      fetch(api('/orders'), { _id: order._id, status, sub: $sub.fire_id }, \"PUT\").then(r => {\n        loading = false;\n        $apply = { order };\n      })\n    }\n  });\n  let segments = $settings.settings.statuses.map((s, i) => { return { name: s, value: i } }).slice(2);\n</script>\n<ModalView style=\"{style}\">\n  <div slot=\"loader\">\n    {#if loading}\n      <Loading>\n        <div slot=\"message\">\n          One Moment Please..\n        </div>\n      </Loading>\n        {/if}\n      </div>\n    <div slot=\"title\" class=\"font-semibold text-xl text-gray-600\">\n        <Segmented style=\"{field_style}\"\n          segments=\"{segments}\"\n          bind:value=\"{$order_status}\" />\n    </div>\n    <div slot=\"content\" class=\"p-2\">\n        <div class=\"m-2\">\n          <p class=\"leading-tight font-semibold\">{order.guest.name}</p>\n          {#if order.guest.phone}\n          <p class=\"leading-tight text-lg text-gray-700 mb-2\"><a href=\"tel:{order.guest.phone}\">{@html phoneFormat(order.guest.phone)}</a></p>\n          {/if}\n          {#if order.guest.address && order.method==2}\n          <p class=\"text-sm text-theme uppercase\">{addressFormat(order.guest.address)} {addressFormat(order.guest.address2)}</p>\n          {:else}\n          <p class=\"text-sm text-theme uppercase\">PICKUP ORDER</p>\n          {/if}\n        </div>\n        <div class=\"rounded-lg bg-teal-400 text-white text-sm font-semibold m-2 p-2\">\n              {dayjs().to(dayjs(order.createdAt))}\n            </div>\n        {#each order.cart as prod,i}\n        <div class=\"flex { i<order.cart.length-1 ? 'border-b' : ''} mx-2 p-2 border-gray-200 list-item\">\n          <div class=\"flex-none w-10 h-10 text-center rounded-lg bg-gray-200 table text-sm text-gray-700\">\n            <span class=\"table-cell align-middle\">{prod.quantity}x</span>\n          </div>\n          <div class=\"flex-grow px-2\">\n            <p class=\"font-semibold\">\n              {prod.name || ''}\n            </p>\n            {#if prod.variant}\n            {#each prod.variant as v}\n            <p class=\"text-sm text-gray-700\">\n              {v.name}\n            </p>\n            {/each}\n            {/if}\n            {#each prod.modifiers as mod}\n            <p class=\"text-sm text-gray-700\">\n              {showMod(mod)}\n            </p>\n            {/each}\n          </div>\n          <div class=\"flex-none w-20 text-right text-sm text-gray-700\">\n            {parseFloat(prod.unit_price || 0).toFixed(2)}\n          </div>\n        </div>\n        {/each}\n        <div class=\"flex-none w-full bg-gray-100 shadow-xs p-3 text-center\">\n            {#if order.delivery_fees && order.method==2}\n            <div class=\"p-2 text-right text-sm\">\n                  <p class=\"text-green-500\">\n                    Delivery charges of <b>RM{parseFloat(order.delivery_fees).toFixed(2)}</b> applies for delivery.\n                  </p>\n            </div>\n            {/if}\n            {#if order.tax}\n                    <div class=\"p-2 text-right text-sm\">\n                          <p class=\"text-green-500\">\n                            SST Tax ({order.tax.value}%) : <b>RM{parseFloat(order.tax.amount).toFixed(2)}</b>\n                          </p>\n                    </div>\n                    {/if}\n            <div class=\"flex px-2 mb-2 font-bold\">\n              <div class=\"flex-grow text-left\">\n                Grand Total\n              </div>\n              <div class=\"flex-grow text-right ml-2\">\n                RM{parseFloat(order.grand_total).toFixed(2)}\n              </div>\n            </div>\n            {#if order.payment}\n            <p class=\"text-center text-theme font-semibold\">{ order.status>4 || (order.payment && order.payment.paidAt) ? `This invoice has been paid. ${order.payment ? '(RM'+order.payment.amount.toFixed(2)+')' : '-'}` : 'Unpaid Invoice' }</p>\n            {/if}\n            {#if order.notes}\n            <div class=\"p-2 text-left text-sm\">\n              <p class=\"text\"><b>Notes :</b> {order.notes}</p>\n            </div>\n            {/if}\n        </div>\n    </div>\n    <div slot=\"toolbar\">\n        <Toolbar on:selected=\"{selected}\" tools=\"{tools}\" style=\"{tool_style}\" />\n    </div>\n</ModalView>","<svelte:head>\n    <script src=\"https://unpkg.com/papaparse@latest/papaparse.min.js\"></script>\n</svelte:head>\n<script>\n    import { onMount, afterUpdate } from 'svelte'\n    import Loading from './UI/UILoading.html'\n    import ModalView from './UI/UIModalView.html'\n    import { support, api, settings, accounts, modal, pop_modal, fetch, download, sub } from './CTStore.js';\n    import Segmented from './UI/UISegmented.html';\n    import dayjs from \"dayjs\"\n    let filters = { type: \"paid\" };\n    let selected_date = dayjs(), format = \"\", loading = false;\n    let field_style = { container: \"p-2 mb-3\", label: \"w-32\" }\n    function changeDate(day) {\n        selected_date = selected_date.add(day, 'day');\n    }\n    function do_export() {\n        loading = true;\n        fetch(api(`/orders`), { sub: $sub.fire_id, order_type: filters.type, from: selected_date.startOf('day').toJSON(), to: selected_date.endOf('day').toJSON() }, 'GET').then(data => {\n            loading = false;\n            process(data.orders);\n        });\n    }\n    function process(orders) {\n        let list = [];\n        switch (format) {\n            case \"\":\n                {\n                    list = orders.map(r => {\n                        return {\n                            \"order_date\": dayjs(r.createdAt).format('MM/DD hh:mm'),\n                            \"name\": r.guest.name,\n                            \"phone\": r.guest.phone,\n                            \"address\": `${r.guest.address || ''} ${r.guest.address2 || ''}`,\n                            \"postcode\": r.guest.postcode,\n                            \"notes\": r.notes,\n                            \"isPickUp\": r.guest.address ? 'N' : 'Y',\n                            \"amount\": r.payment ? r.payment.amount.toFixed(2) : \"10.00\",\n                            \"paid\": r.payment ? dayjs(r.payment.paidAt || r.createdAt).format('MM/DD hh:mm') : '',\n                            \"invoice\": `https://pay.getorders.app/?i=${r.invoice_id}`\n                        }\n                    })\n                }\n                break;\n            case \"speedy\":\n                {\n                    list = orders.map(r => {\n                        return {\n                            \"Address(mandatory field)\": `${r.guest.address || ''} ${r.guest.address2 || ''}`,\n                            \"Contact person\": r.guest.name,\n                            \"Recipient's phone (mandatory field)\": r.guest.phone,\n                            \"Parcel contents(mandatory field)\": \"FOOD\",\n                            \"Weight in kg(mandatory field)\": 0.5,\n                            \"Internal order number\": r.invoice_id,\n                            \"Comment for courier\": (r.notes || ''),\n                            \"Apartment / office number\": \"\",\n                            \"Need to return on pickup point\": \"\",\n                            \"Time \\\"since\\\" on point\": dayjs(r.createdAt).format('DD.MM.YYYY hh:mm:ss'),\n                            \"Time \\\"till\\\" on point\": dayjs(r.createdAt).add(1, 'hour').format('DD.MM.YYYY hh:mm:ss'),\n                            \"COD amount\": \"0\",\n                            \"Buyout amount\": \"0\",\n                            \"Do not fill anything in this column\": \"\",\n                            \"Declared value\": r.payment ? r.payment.amount.toFixed(2) : \"10.00\",\n                            \"Courier needs motorbox\": \"x\"\n                        }\n                    });\n                }\n                break;\n            case \"zepto\":\n                {\n                    list = orders.map(r => {\n                        return {\n                            \"UNIT_NO\": \"\",\n                            \"ADDRESS\": `${r.guest.address || ''} ${r.guest.address2 || ''}`,\n                            \"CONTACT_PERSON\": r.guest.name,\n                            \"CONTACT_NUMBER\": r.guest.phone,\n                            \"EMAIL\": \"\",\n                            \"INSTRUCTION_NOTE\": (r.notes || '')\n                        }\n                    });\n                    list = [{\n                        \"UNIT_NO\": \"\",\n                        \"ADDRESS\": `${$settings.settings.address || ''} ${$settings.settings.address2 || ''} ${$settings.settings.postcode || ''}`,\n                        \"CONTACT_PERSON\": $settings.settings.name,\n                        \"CONTACT_NUMBER\": $settings.settings.phone,\n                        \"EMAIL\": \"\",\n                        \"INSTRUCTION_NOTE\": \"PICKUP HERE\"\n                    }, ...list];\n                }\n                break;\n        }\n\n        download(Papa.unparse(list), 'orders.csv', 'text/csv;encoding:utf-8');\n    }\n</script>\n<ModalView>\n    <div slot=\"loader\">\n        {#if loading}\n        <Loading>\n            <div slot=\"message\">\n                Extracting data..\n            </div>\n        </Loading>\n        {/if}\n    </div>\n    <div slot=\"title\" class=\"font-semibold text-xl text-gray-600 pb-3\">\n        Export Orders\n    </div>\n    <div slot=\"content\" class=\"p-2\">\n        <p class=\"text-gray-800 mb-2 text-center\">\n            Select a day to export from\n        </p>\n        <div class=\"flex text-lg font-semibold m-2\">\n            <button on:click=\"{ () => changeDate(-1) }\"><i class=\"far fa-arrow-alt-circle-left\"></i></button>\n            <div class=\"flex-grow self-center text-center\">\n                {selected_date.format('ddd D/M/YY')}\n            </div>\n            <button on:click=\"{ () => changeDate(1) }\"><i class=\"far fa-arrow-alt-circle-right\"></i></button>\n        </div>\n        <p class=\"text-gray-800 my-2 text-center\">\n            Select format to export to\n        </p>\n        <div class=\"flex justify-center\">\n            <Segmented style=\"{field_style}\" label=\"\"\n                segments=\"{[{ name : 'Default', value : ''}, { name : 'Zepto', value : 'zepto'}, { name : 'Mr Speedy', value : 'speedy'}]}\"\n                bind:value=\"{format}\" />\n        </div>\n        <p class=\"text-gray-800 my-2 text-center\">\n            Export Options\n        </p>\n        <div class=\"flex justify-center\">\n            <Segmented style=\"{field_style}\" label=\"\"\n                segments=\"{[{ name : 'Paid', value : 'paid'}, { name : 'All', value : ''}]}\"\n                bind:value=\"{filters.type}\" />\n        </div>\n        <div class=\"flex justify-center mt-2\">\n            <button on:click=\"{do_export}\"\n                class=\"p-2 w-1/2 shadow-md bg-theme text-white rounded-lg capitalize font-bold h-full shadow-md\">\n                Export Now\n            </button>\n        </div>\n        <div class=\"flex justify-center my-2\">\n            <button on:click=\"{pop_modal}\"\n                class=\"p-2 w-1/2 shadow-md bg-gray-400 text-white rounded-lg capitalize font-bold h-full shadow-md\">\n                Cancel\n            </button>\n        </div>\n    </div>\n</ModalView>"],"names":["ctx","pop_modal","support","$settings","settings","fire_id","module","r","t","e","n","prototype","en","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","o","i","u","a","$locale","f","l","length","diff","Math","round","abs","c","replace","to","this","from","$u","utc","toNow","fromNow","phoneFormat","guest","phone","addressFormat","address","address2","variant","name","showMod","quantity","parseFloat","unit_price","toFixed","modifiers","cart","delivery_fees","tax","value","amount","status","payment","paidAt","notes","dayjs","createdAt","grand_total","method","replaceAll","str","find","RegExp","arr","match","num","forEach","mod","prefix","mode","suffix","mod_amt","amt","order","start_up","tools","icon","function","loading","delivery_token","delivery","extend","fetch","api","order_id","invoice_id","then","order_status","writable","subscribe","_id","sub","$sub","$apply","segments","statuses","map","slice","container","detail","window","open","tracking_no","alert","content","$order_status","format","type","filters","selected_date","changeDate","day","add","process","orders","list","order_date","postcode","isPickUp","paid","invoice","Address(mandatory field)","Contact person","Recipient's phone (mandatory field)","Parcel contents(mandatory field)","Weight in kg(mandatory field)","Internal order number","Comment for courier","Apartment / office number","Need to return on pickup point","Time \"since\" on point","Time \"till\" on point","COD amount","Buyout amount","Do not fill anything in this column","Declared value","Courier needs motorbox","UNIT_NO","ADDRESS","CONTACT_PERSON","CONTACT_NUMBER","EMAIL","INSTRUCTION_NOTE","download","Papa","unparse","label","order_type","startOf","toJSON","endOf","data"],"mappings":"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"}