{"version":3,"file":"Inventory-7d24f177.js","sources":["../../src/InventoryView.html","../../src/Inventory.html"],"sourcesContent":["<script>\n    import { onMount, afterUpdate } from 'svelte'\n    import Toolbar from './UI/UIToolbar.html'\n    import TextField from './UI/UITextField.html'\n    import Segmented from './UI/UISegmented.html'\n    import UIItem from './UI/UIItem.html'\n    import ModalView from './UI/UIModalView.html'\n    import ProductSelectionView from './ProductSelectionView.html'\n    import Loading from './UI/UILoading.html'\n    import { session, api, alert, accounts, modal, apply, fetch, customers, pop_modal, products, s3 } from './CTStore.js';\n    let loading = false, tags, file;\n    export let defaults = {}, account = {}, outlet = {}, inventories = [];\n    let style = { body: 'screen-height', content: 'overflow-y-scroll scrolling-touch' }\n    let tool_style = { container: `justify-end ${loading ? 'opacity-25' : ''}` }\n    let tools = [{ name: \"Close\", icon: \"close-circle\", function: \"pop_modal\" },\n    { name: \"Save\", icon: \"checkmark-circle\", function: \"save\" }]\n \n    async function selected(e) {\n        if (e.detail.function == 'pop_modal') {\n            pop_modal()\n        }\n        if (e.detail.function == 'save') {\n            loading = true;\n            fetch(api(`/inventory`), inventories.map(products => {\n                let soldAt = [];\n                Object.keys(products.soldAt).map(s => { if(products.soldAt[s]==true) soldAt = [...soldAt, parseInt(s)] })\n                return {...products, soldAt}\n            })).then(r => { $apply = { inventory: r }; pop_modal(); });\n        }\n    }\n    function prod_info(prod) {\n        return products.find(p => p.id == parseInt(prod.id)) || { name: \"-\" };\n    }\n    function edit_products() {\n        $modal = [...$modal, { selected_prods: [], products : $products, view: ProductSelectionView }]\n    }\n    function remove(prod_id){\n        inventories = inventories.filter(i => i.id != prod_id)\n    }\n    apply.subscribe(cb => {\n        if (cb.selected_prods) {\n            inventories = [...inventories, ...cb.selected_prods.map(p => {\n                if(!p.outlet_id){\n                    p = {...defaults, ...p}\n                    p.product_id = p.id;\n                    p.variant_id = \"\";\n                    p.soldAt = { 0: true, 1: true, 2: true }\n                }\n                return p;\n            })];\n            $apply = {};\n        }\n    })\n    let field_style = { container: 'w-1/2 mx-2' }\n</script>\n<style>\n    .sect {\n        @apply text-xl font-bold mt-3 mx-2;\n    }\n    table {\n        @apply w-full;\n    }\n    td {\n        @apply px-2;\n    }\n</style>\n<ModalView style=\"{{ body: 'screen-height', content: 'overflow-y-scroll scrolling-touch' }}\">\n    <div slot=\"loader\">\n        {#if loading}\n  <Loading>\n    <div slot=\"message\">\n      One Moment Please..\n    </div>\n  </Loading>\n    {/if}\n  </div>\n  <div slot=\"title\" class=\"font-semibold text-xl text-gray-600 pb-3\">\n    <b>{outlet.name}</b> Outlet Inventory\n  </div>\n  <div slot=\"content\" class=\"p-2\">\n    <div class=\"rounded-lg p-2 border border-dashed cursor-pointer\" on:click=\"{edit_products}\">\n        <p class=\"text-gray-600\">\n            <i class=\"pr-3 self-center fas fa-plus\"></i>\n            Add Products\n        </p>\n    </div>\n    <table class=\"my-2\">\n        <tr class=\"font-semibold text-theme text-sm text-center\">\n            <td>Product</td>\n            <td>Variant</td>\n            <td class=\"w-6\">Quantity</td>\n            <td>Stores</td>\n            <td>Track</td>\n            <td></td>\n        </tr>\n    {#each inventories as details}\n        <tr class=\"text-center\">\n            <td class=\"text-gray-800 text-left\">{details.name}</td>\n            <td>\n                <select class=\"text-sm\" bind:value=\"{details.variant_id}\">\n                    <option value=\"All\">All</option>\n                    {#each details.variants as variant}\n                    <option value=\"{variant.id}\">{variant.name}</option>\n                    {/each}\n                </select>\n            </td>\n            <td>\n                <input class=\"border border-gray-300 p-1 w-full\" type=\"text\" placeholder=\"10\" bind:value=\"{details.quantity}\" />\n            </td>\n            <td>\n                {#each [{ id:0, name:'Pickup'},{ id:1, name:'Delivery'},{ id:2, name:'Dine-In'}] as shop}\n                <label class=\"px-2 text-sm\">\n                    <input type=checkbox bind:checked={details.soldAt[shop.id]}>\n                    {shop.name}\n                </label>\n                {/each}\n            </td>\n            <td>\n                <input type=checkbox bind:checked={details.track}>\n            </td>\n            <td>\n                <button on:click=\"{ () => remove(details.id) }\">\n                    <i class=\"icon ion-md-close w-8 h-8 text-center\"></i>\n                </button>\n            </td>\n        </tr>\n        {/each}\n    </table>\n  </div>\n  <div slot=\"toolbar\">\n    <Toolbar on:selected=\"{selected}\" tools=\"{tools}\" style=\"{tool_style}\" />\n  </div>\n</ModalView>","<script>\n    import { onMount } from 'svelte';\n    import dayjs from \"dayjs\";\n    import Toolbar from './UI/UIToolbar.html';\n    import Loading from './UI/UILoading.html';\n    import UIItem from './UI/UIItem.html';\n    import InventoryView from './InventoryView.html';\n    import { session, api, alert, apply, modal, fetch, products } from './CTStore.js';\n    let inventories, loading = false, account, outlet;\n    let style = { container: `border-b border-gray-300` }\n    let tools = [{ name: \"Create\", icon: \"add\", function: \"add\" }]\n    onMount(async () => {\n        let o = await fetch(api('/accounts'));\n        account = o[0];\n        outlet = account.outlets.length > 0 ? account.outlets[0] : { id: \"\", name: \"Default\" };\n    });\n    $: if (outlet) {\n        $products = [];\n        inventories = [];\n        loading = true;\n        Promise.all([get_products(),get_inventory()]).then(r=> {\n            loading = false;\n        })\n    }\n    $: if($products.length>0 && inventories && inventories.length>0){\n        inventories = inventories.map(i => prod_info(i));\n        console.log(inventories);\n    }\n    async function get_inventory() {\n        let query = {};\n        if (account.franchise_id) {\n            query = { fran_id: account.franchise_id, outlet_id: outlet.id };\n        }\n        inventories = await fetch(api('/inventory'), query, 'GET');\n    }\n    async function get_products() {\n        loading = true;\n        let prods, query = { fire_id: account.fire_id };\n        if (account.franchise_id) {\n            query = { fran_id: account.franchise_id, outlet_id: outlet.id };\n            try {\n                prods = await fetch(`https://db.getorders.app/products.sl.${account.franchise_id}.${outlet.id}.json`);\n                if (Object.prototype.toString.call(prods) != '[object Array]') {\n                    prods = undefined;\n                }\n                console.log(prods);\n            } catch {\n                console.log(\"S3 not found\");\n            }\n        }\n        if (!prods) {\n            prods = await fetch(api('/guest/products'), query, \"GET\");\n        }\n        $products = prods;\n        loading = false;\n        return $products;\n    }\n\n    apply.subscribe(cb => {\n        if (cb.inventory) {\n            /*\n            //To fix, differentiate variants\n            let ids = cb.inventory.map(i => i.product_id);\n            inventories = inventories.filter(i => !ids.includes(i.product_id))\n            inventories = [...cb.inventory, ...inventories];*/\n            loading = true;\n            Promise.all([get_inventory()]).then(r=> {\n                loading = false;\n            })\n            $apply = {};\n        }\n    });\n    function inspect(product) {\n        $modal = [...$modal, { product, view: ProductView }]\n    }\n    function selected(e) {\n        if (e.detail.function == 'add' && !loading) {\n            let defaults = {\n                totals: [],\n                quantity: 0,\n                track: false,\n                enforce: true,\n                outlet_id: outlet.id\n            }\n            $modal = [...$modal, { outlet, defaults: { ...defaults }, view: InventoryView }];\n        }\n    }\n    function toggle(product) {\n        loading = true;\n        let date = new Date();\n        product.deletedAt = product.deletedAt ? null : date;\n\n        fetch(api(`/products`)).then(r => { loading = false; $apply = { product: r } });\n    }\n    function prod_info(prod) {\n        let thisProd = $products.find(p => '' + p.id == prod.product_id) || { name: \"-\", variants : [] };\n        thisProd.variant = \"All\";\n        if(prod.variant_id){\n            let variant = thisProd.variants.find(v => ''+v.id == prod.variant_id);\n            if(variant) thisProd.variant = variant.name;\n        }\n        return {...thisProd, ...prod};\n    }\n</script>\n<style>\n    .sect {\n        @apply text-xl font-bold mt-3 mx-2;\n    }\n\n    table {\n        @apply w-full;\n    }\n\n    td {\n        @apply px-2;\n    }\n</style>\n<div class=\"{ loading ? 'opacity-25' : ''}\">\n    <Toolbar style=\"{style}\" on:selected=\"{selected}\" tools=\"{tools}\" />\n</div>\n<div class=\"border-t border-b border-gray-200 flex\">\n    <div class=\"p-2 flex-none\">\n        <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n            Outlet\n        </label>\n        {#if account}\n        <select class=\"text-xl my-2 w-48\" on:change=\"{ (e) => outlet = account.outlets.find(o => ''+o.id == e.target.value) }\">\n            {#if account.outlets.length==0}\n            <option value=\"0\">Default</option>\n            {/if}\n            {#each account.outlets as outlet,i}\n            <option value=\"{''+outlet.id}\">{outlet.name}</option>\n            {/each}\n        </select>\n        {/if}\n  </div>\n</div>\n\n\n{#if !inventories || loading}\n<Loading type=\"h-64\">\n    <div slot=\"message\">\n      One Moment Please..\n    </div>\n  </Loading>\n{:else}\n<table class=\"my-2\">\n    <tr class=\"font-semibold text-theme text-sm text-center\">\n        <td>Product</td>\n        <td>Variant</td>\n        <td class=\"w-6\">Quantity</td>\n        <td>Current Qty</td>\n        <td>Stores</td>\n        <td>Track</td>\n        <td>Date/Time</td>\n    </tr>\n    {#each inventories as details}\n        <tr class=\"text-center hover:bg-gray-200\">\n            <td class=\"text-gray-800 text-left\">{details.name}</td>\n            <td>\n            {details.variant}\n            </td>\n            <td>\n                <input class=\"border border-gray-300 p-1 w-full\" type=\"text\" placeholder=\"10\" bind:value=\"{details.quantity}\" disabled/>\n            </td>\n            <td>\n                {details.total_left}\n            </td>\n            <td>\n                {#each [{ id:0, name:'Pickup'},{ id:1, name:'Delivery'},{ id:2, name:'Dine-In'}] as shop}\n                <label class=\"px-2 text-sm\">\n                    <input type=checkbox checked={details.soldAt.includes(shop.id)} disabled>\n                    {shop.name}\n                </label>\n                {/each}\n            </td>\n            <td>\n                <input type=checkbox bind:checked={details.track} disabled>\n            </td>\n            <td class=\"text-sm text-gray-700\">\n                {dayjs(details.createdAt).format('DD/MM/YYYY h:mmA')}\n            </td>\n        </tr>\n    {/each}\n</table>\n{/if}"],"names":["ctx","name","id","soldAt","variants","length","variant_id","quantity","track","body","content","loading","defaults","account","outlet","inventories","tool_style","container","remove","prod_id","filter","i","apply","subscribe","cb","selected_prods","map","p","outlet_id","product_id","0","1","2","$apply","icon","function","e","detail","pop_modal","fetch","api","products","Object","keys","s","parseInt","then","r","inventory","$modal","$products","view","ProductSelectionView","tags","file","details","shop","outlets","includes","variant","total_left","dayjs","createdAt","format","style","get_inventory","query","franchise_id","fran_id","get_products","prods","fire_id","prototype","toString","call","undefined","console","log","prod_info","prod","thisProd","find","v","onMount","o","Promise","all","totals","enforce","InventoryView","product","ProductView","date","Date","deletedAt","target","value"],"mappings":"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"}